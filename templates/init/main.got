package main

import (
	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	"{{.ModuleName}}/config"
	"{{.ModuleName}}/controller"
	_ "{{.ModuleName}}/gateway/customlog"
	_ "{{.ModuleName}}/gateway/rest"
)

func main() {
	e := echo.New()
	e.Use(middleware.TimeoutWithConfig(middleware.TimeoutConfig{
		Skipper:                     middleware.DefaultSkipper,
		ErrorMessage:                fmt.Sprintf("A request timeout occurred because the maximum request duration of %d seconds was reached.", config.Values.RestListenerTimeout)
		OnTimeoutRouteErrorHandler:  func(err error, c echo.Context) {
			config.GetLogger().Errorf(fmt.Sprintf("A request timeout occurred because the maximum request duration of %d seconds was reached. Path: %s", config.Values.RestListenerTimeout, c.Path()))
		},
		Timeout:                     time.Duration(config.Values.RestListenerTimeout) * time.Second,
	  }))
	controller.MapRoutes(e)

	e.Logger.Fatal(e.Start(":" + config.Values.Port))
}
